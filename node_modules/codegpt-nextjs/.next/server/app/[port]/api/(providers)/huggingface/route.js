"use strict";(()=>{var e={};e.id=9684,e.ids=[9684],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},41808:e=>{e.exports=require("net")},22037:e=>{e.exports=require("os")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},24404:e=>{e.exports=require("tls")},76224:e=>{e.exports=require("tty")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},52:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>ef,patchFetch:()=>ep,requestAsyncStorage:()=>eu,routeModule:()=>eo,serverHooks:()=>el,staticGenerationAsyncStorage:()=>ec});var n={};r.r(n),r.d(n,{HEAD:()=>ei,POST:()=>es});var a=r(49303),i=r(88716),s=r(60670),o=r(20021),u=r(56342),c=r(76129),l=r(51414),f=r(87320),p=r(94750),y=r(73626),d=Object.defineProperty,g={};function m(e){return/^http(s?):/.test(e)||e.startsWith("/")}((e,t)=>{for(var r in t)d(e,r,{get:t[r],enumerable:!0})})(g,{audioClassification:()=>j,audioToAudio:()=>C,automaticSpeechRecognition:()=>_,documentQuestionAnswering:()=>V,featureExtraction:()=>U,fillMask:()=>X,imageClassification:()=>S,imageSegmentation:()=>O,imageToImage:()=>z,imageToText:()=>B,objectDetection:()=>P,questionAnswering:()=>D,request:()=>k,sentenceSimilarity:()=>F,streamingRequest:()=>E,summarization:()=>N,tableQuestionAnswering:()=>L,tabularClassification:()=>et,tabularRegression:()=>ee,textClassification:()=>M,textGeneration:()=>W,textGenerationStream:()=>G,textToImage:()=>$,textToSpeech:()=>H,tokenClassification:()=>Z,translation:()=>Q,visualQuestionAnswering:()=>Y,zeroShotClassification:()=>J,zeroShotImageClassification:()=>I});var w=new Map,h="https://huggingface.co";async function b(e,t,r){if(m(e))return null;let n=`${e}:${t}`,a=w.get(n);if(a&&a.date<new Date(Date.now()-6e5)&&(w.delete(n),a=void 0),void 0===a){let i=await (r?.fetch??fetch)(`${h}/api/models/${e}?expand[]=pipeline_tag`,{headers:t?{Authorization:`Bearer ${t}`}:{}}).then(e=>e.json()).then(e=>e.pipeline_tag).catch(()=>null);if(!i)return null;a={task:i,date:new Date},w.set(n,{task:i,date:new Date}),w.size>1e3&&w.delete(w.keys().next().value)}return a.task}var x="https://api-inference.huggingface.co",A=null;async function v(e,t){let r;let{accessToken:n,model:a,...i}=e,{model:s}=e,{forceTask:o,includeCredentials:u,taskHint:c,wait_for_model:l,use_cache:f,dont_load_model:p,...y}=t??{},d={};if(n&&(d.Authorization=`Bearer ${n}`),!s&&!A&&c){let e=await fetch(`${h}/api/tasks`);e.ok&&(A=await e.json())}if(!s&&A&&c){let e=A[c];e&&(s=e.models[0].id)}if(!s)throw Error("No model provided, and no default model found for this task");let g="data"in e&&!!e.data;g||(d["Content-Type"]="application/json"),l&&(d["X-Wait-For-Model"]="true"),!1===f&&(d["X-Use-Cache"]="false"),p&&(d["X-Load-Model"]="0");let w=m(s)?s:o?`${x}/pipeline/${o}/${s}`:`${x}/models/${s}`;return"string"==typeof u?r=u:!0===u&&(r="include"),{url:w,info:{headers:d,method:"POST",body:g?e.data:JSON.stringify({...i,options:t&&y}),...r&&{credentials:r},signal:t?.signal}}}async function k(e,t){let{url:r,info:n}=await v(e,t),a=await (t?.fetch??fetch)(r,n);if(t?.retry_on_error!==!1&&503===a.status&&!t?.wait_for_model)return k(e,{...t,wait_for_model:!0});if(!a.ok){if(a.headers.get("Content-Type")?.startsWith("application/json")){let e=await a.json();if(e.error)throw Error(e.error)}throw Error("An error occurred while fetching the blob")}return a.headers.get("Content-Type")?.startsWith("application/json")?await a.json():await a.blob()}function q(){return{data:"",event:"",id:"",retry:void 0}}async function*E(e,t){var r;let n,a,i,s;let{url:o,info:u}=await v({...e,stream:!0},t),c=await (t?.fetch??fetch)(o,u);if(t?.retry_on_error!==!1&&503===c.status&&!t?.wait_for_model)return yield*E(e,{...t,wait_for_model:!0});if(!c.ok){if(c.headers.get("Content-Type")?.startsWith("application/json")){let e=await c.json();if(e.error)throw Error(e.error)}throw Error(`Server response contains error: ${c.status}`)}if(!c.headers.get("content-type")?.startsWith("text/event-stream"))throw Error("Server does not support event stream content type, it returned "+c.headers.get("content-type"));if(!c.body)return;let l=c.body.getReader(),f=[],p=(r=function(e,t,r){let n=q(),a=new TextDecoder;return function(i,s){if(0===i.length)r?.(n),n=q();else if(s>0){let r=a.decode(i.subarray(0,s)),o=s+(32===i[s+1]?2:1),u=a.decode(i.subarray(o));switch(r){case"data":n.data=n.data?n.data+"\n"+u:u;break;case"event":n.event=u;break;case"id":e(n.id=u);break;case"retry":let c=parseInt(u,10);isNaN(c)||t(n.retry=c)}}}}(()=>{},()=>{},e=>{f.push(e)}),s=!1,function(e){void 0===n?(n=e,a=0,i=-1):n=function(e,t){let r=new Uint8Array(e.length+t.length);return r.set(e),r.set(t,e.length),r}(n,e);let t=n.length,o=0;for(;a<t;){s&&(10===n[a]&&(o=++a),s=!1);let e=-1;for(;a<t&&-1===e;++a)switch(n[a]){case 58:-1===i&&(i=a-o);break;case 13:s=!0;case 10:e=a}if(-1===e)break;r(n.subarray(o,e),i),o=a,i=-1}o===t?n=void 0:0!==o&&(n=n.subarray(o),a-=o)});try{for(;;){let{done:e,value:t}=await l.read();if(e)return;for(let e of(p(t),f))if(e.data.length>0){let t=JSON.parse(e.data);if("object"==typeof t&&null!==t&&"error"in t)throw Error(t.error);yield t}f=[]}}finally{l.releaseLock()}}var T=class extends TypeError{constructor(e){super(`Invalid inference output: ${e}. Use the 'request' method with the same parameters to do a custom call with no type checking.`),this.name="InferenceOutputError"}};async function j(e,t){let r=await k(e,{...t,taskHint:"audio-classification"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e.label&&"number"==typeof e.score)))throw new T("Expected Array<{label: string, score: number}>");return r}async function _(e,t){let r=await k(e,{...t,taskHint:"automatic-speech-recognition"});if("string"!=typeof r?.text)throw new T("Expected {text: string}");return r}async function H(e,t){let r=await k(e,{...t,taskHint:"text-to-speech"});if(!(r&&r instanceof Blob))throw new T("Expected Blob");return r}async function C(e,t){let r=await k(e,{...t,taskHint:"audio-to-audio"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e.label&&"string"==typeof e.blob&&"string"==typeof e["content-type"])))throw new T("Expected Array<{label: string, blob: string, content-type: string}>");return r}async function S(e,t){let r=await k(e,{...t,taskHint:"image-classification"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e.label&&"number"==typeof e.score)))throw new T("Expected Array<{label: string, score: number}>");return r}async function O(e,t){let r=await k(e,{...t,taskHint:"image-segmentation"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e.label&&"string"==typeof e.mask&&"number"==typeof e.score)))throw new T("Expected Array<{label: string, mask: string, score: number}>");return r}async function B(e,t){let r=(await k(e,{...t,taskHint:"image-to-text"}))?.[0];if("string"!=typeof r?.generated_text)throw new T("Expected {generated_text: string}");return r}async function P(e,t){let r=await k(e,{...t,taskHint:"object-detection"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e.label&&"number"==typeof e.score&&"number"==typeof e.box.xmin&&"number"==typeof e.box.ymin&&"number"==typeof e.box.xmax&&"number"==typeof e.box.ymax)))throw new T("Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>");return r}async function $(e,t){let r=await k(e,{...t,taskHint:"text-to-image"});if(!(r&&r instanceof Blob))throw new T("Expected Blob");return r}function R(e){if(globalThis.Buffer)return globalThis.Buffer.from(e).toString("base64");{let t=[];return e.forEach(e=>{t.push(String.fromCharCode(e))}),globalThis.btoa(t.join(""))}}async function z(e,t){let r;r=e.parameters?{...e,inputs:R(new Uint8Array(e.inputs instanceof ArrayBuffer?e.inputs:await e.inputs.arrayBuffer()))}:{accessToken:e.accessToken,model:e.model,data:e.inputs};let n=await k(r,{...t,taskHint:"image-to-image"});if(!(n&&n instanceof Blob))throw new T("Expected Blob");return n}async function I(e,t){let r={...e,inputs:{image:R(new Uint8Array(e.inputs.image instanceof ArrayBuffer?e.inputs.image:await e.inputs.image.arrayBuffer()))}},n=await k(r,{...t,taskHint:"zero-shot-image-classification"});if(!(Array.isArray(n)&&n.every(e=>"string"==typeof e.label&&"number"==typeof e.score)))throw new T("Expected Array<{label: string, score: number}>");return n}async function U(e,t){let r=e.model?await b(e.model,e.accessToken,t):void 0,n=await k(e,{...t,taskHint:"feature-extraction",..."sentence-similarity"===r&&{forceTask:"feature-extraction"}}),a=(e,t,r=0)=>!(r>t)&&(e.every(e=>Array.isArray(e))?e.every(e=>a(e,t,r+1)):e.every(e=>"number"==typeof e));if(!(Array.isArray(n)&&a(n,3,0)))throw new T("Expected Array<number[][][] | number[][] | number[] | number>");return n}async function X(e,t){let r=await k(e,{...t,taskHint:"fill-mask"});if(!(Array.isArray(r)&&r.every(e=>"number"==typeof e.score&&"string"==typeof e.sequence&&"number"==typeof e.token&&"string"==typeof e.token_str)))throw new T("Expected Array<{score: number, sequence: string, token: number, token_str: string}>");return r}async function D(e,t){let r=await k(e,{...t,taskHint:"question-answering"});if(!("object"==typeof r&&r&&"string"==typeof r.answer&&"number"==typeof r.end&&"number"==typeof r.score&&"number"==typeof r.start))throw new T("Expected {answer: string, end: number, score: number, start: number}");return r}async function F(e,t){let r=e.model?await b(e.model,e.accessToken,t):void 0,n=await k(e,{...t,taskHint:"sentence-similarity",..."feature-extraction"===r&&{forceTask:"sentence-similarity"}});if(!(Array.isArray(n)&&n.every(e=>"number"==typeof e)))throw new T("Expected number[]");return n}async function N(e,t){let r=await k(e,{...t,taskHint:"summarization"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e?.summary_text)))throw new T("Expected Array<{summary_text: string}>");return r?.[0]}async function L(e,t){let r=await k(e,{...t,taskHint:"table-question-answering"});if(!("string"==typeof r?.aggregator&&"string"==typeof r.answer&&Array.isArray(r.cells)&&r.cells.every(e=>"string"==typeof e)&&Array.isArray(r.coordinates)&&r.coordinates.every(e=>Array.isArray(e)&&e.every(e=>"number"==typeof e))))throw new T("Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}");return r}async function M(e,t){let r=(await k(e,{...t,taskHint:"text-classification"}))?.[0];if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e?.label&&"number"==typeof e.score)))throw new T("Expected Array<{label: string, score: number}>");return r}async function W(e,t){let r=await k(e,{...t,taskHint:"text-generation"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e?.generated_text)))throw new T("Expected Array<{generated_text: string}>");return r?.[0]}async function*G(e,t){yield*E(e,{...t,taskHint:"text-generation"})}function K(e){return Array.isArray(e)?e:[e]}async function Z(e,t){let r=K(await k(e,{...t,taskHint:"token-classification"}));if(!(Array.isArray(r)&&r.every(e=>"number"==typeof e.end&&"string"==typeof e.entity_group&&"number"==typeof e.score&&"number"==typeof e.start&&"string"==typeof e.word)))throw new T("Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>");return r}async function Q(e,t){let r=await k(e,{...t,taskHint:"translation"});if(!(Array.isArray(r)&&r.every(e=>"string"==typeof e?.translation_text)))throw new T("Expected type Array<{translation_text: string}>");return r?.length===1?r?.[0]:r}async function J(e,t){let r=K(await k(e,{...t,taskHint:"zero-shot-classification"}));if(!(Array.isArray(r)&&r.every(e=>Array.isArray(e.labels)&&e.labels.every(e=>"string"==typeof e)&&Array.isArray(e.scores)&&e.scores.every(e=>"number"==typeof e)&&"string"==typeof e.sequence)))throw new T("Expected Array<{labels: string[], scores: number[], sequence: string}>");return r}async function V(e,t){let r={...e,inputs:{question:e.inputs.question,image:R(new Uint8Array(e.inputs.image instanceof ArrayBuffer?e.inputs.image:await e.inputs.image.arrayBuffer()))}},n=K(await k(r,{...t,taskHint:"document-question-answering"}))?.[0];if(!("string"==typeof n?.answer&&("number"==typeof n.end||void 0===n.end)&&("number"==typeof n.score||void 0===n.score)&&("number"==typeof n.start||void 0===n.start)))throw new T("Expected Array<{answer: string, end?: number, score?: number, start?: number}>");return n}async function Y(e,t){let r={...e,inputs:{question:e.inputs.question,image:R(new Uint8Array(e.inputs.image instanceof ArrayBuffer?e.inputs.image:await e.inputs.image.arrayBuffer()))}},n=(await k(r,{...t,taskHint:"visual-question-answering"}))?.[0];if(!("string"==typeof n?.answer&&"number"==typeof n.score))throw new T("Expected Array<{answer: string, score: number}>");return n}async function ee(e,t){let r=await k(e,{...t,taskHint:"tabular-regression"});if(!(Array.isArray(r)&&r.every(e=>"number"==typeof e)))throw new T("Expected number[]");return r}async function et(e,t){let r=await k(e,{...t,taskHint:"tabular-classification"});if(!(Array.isArray(r)&&r.every(e=>"number"==typeof e)))throw new T("Expected number[]");return r}"undefined"!=typeof window&&window.document,"object"==typeof self&&self.constructor&&self.constructor.name;var er=class{accessToken;defaultOptions;constructor(e="",t={}){for(let[r,n]of(this.accessToken=e,this.defaultOptions=t,Object.entries(g)))Object.defineProperty(this,r,{enumerable:!1,value:(r,a)=>n({...r,accessToken:e},{...t,...a})})}endpoint(e){return new en(e,this.accessToken,this.defaultOptions)}},en=class{constructor(e,t="",r={}){for(let[n,a]of Object.entries(g))Object.defineProperty(this,n,{enumerable:!1,value:(n,i)=>a({...n,accessToken:t,model:e},{...r,...i})})}},ea=r(16292);async function ei(){return Response.json("",{status:o.Xd?.apiKey?200:401})}async function es(e){if(o.Xd?.config?.apiKey?.toLowerCase()!=="huggingface")return Response.json("Oops! The selected model has a potential configuration conflict. Please ensure that all your open instances of VSCode have the same provider.",{status:400});let{messages:t}=await e.json();t=(0,y.D)({messages:t});let r=e.headers.get("model"),n=e.headers.get("promptType"),a=await p.Z.getLanguage(),i=await p.Z.getIdeLanguage(),s="Chat";if(n){s=t[t.length-1].content+"CodeGPT";let e=(0,c.u)({promptType:t[t.length-1].content,cleanPromptText:await p.Z.getSelectedText(),language:i});e&&(t[t.length-1].content=e)}t.unshift({role:"assistant",content:"I am a helpful programming expert assistant. If you ask me a question that is rooted in truth. Follow the user's instructions with precision and attention to detail. Provide the code in a single block. Minimize any additional text."});let d=await p.Z.getSelectedText();d&&(t[t.length-1].content+="\n```"+a+"\n"+d+"\n```");let g=(0,f.q)(t.map(e=>e.content).join(""));try{let e=async(e,t)=>{let n=await fetch(e,t);return n.ok||(0,u.q)({eventName:s,provider:"HuggingFace",model:r||"OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5",promptTokens:g,totalTokens:g,statusCode:n.status}),n},i=new er(o.Xd?.apiKey||"",{fetch:e});if(!o.Xd.apiKey){let e=Error("You need to set your Azure details first.");throw e.status=401,e}let c=o.Xd?.globalState?.config,p=i.textGenerationStream({model:r||"OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5",inputs:t.map(({content:e,role:t})=>{if("user"===t)return`<|prompter|>${e}<|endoftext|>`;if("function"===t)throw Error("OpenAssistant does not support function calls.");if("system"!==t)return`<|assistant|>${e}<|endoftext|>`;throw Error("OpenAssistant does not support system messages.")}).join("")+"<|assistant|>",parameters:{max_new_tokens:c?.maxTokens||1500,temperature:c?.temperature||.3,typical_p:.2,repetition_penalty:1,return_full_text:!1}}),y=(0,ea.lu)(p,{onFinal:async e=>{let t=(0,f.q)(e);(0,u.q)({eventName:s,provider:"HuggingFace",model:r??"",promptTokens:g,completionTokens:t,totalTokens:g+t,statusCode:200})}}),m=t.slice(0,-1).some(e=>e.content.includes(d));if(d&&(n||!m)){let e=await (0,l.V)(["```"+a+"\n"+d+"\n```"],y);return new ea.wn(e)}return new ea.wn(y)}catch(e){if((0,u.q)({eventName:s,provider:"HuggingFace",model:r||"OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5",promptTokens:g,totalTokens:g,statusCode:e.status??500}),e.message.includes("Invalid URL"))return Response.json({message:"Invalid URL",status:401},{status:400});return Response.json({message:e.message,status:e.status??500},{status:e.status??500})}}let eo=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/[port]/api/(providers)/huggingface/route",pathname:"/[port]/api/huggingface",filename:"route",bundlePath:"app/[port]/api/(providers)/huggingface/route"},resolvedPagePath:"/Users/maol/WebstormProjects/Trabajo/codegpt-nextjs/app/[port]/api/(providers)/huggingface/route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:eu,staticGenerationAsyncStorage:ec,serverHooks:el}=eo,ef="/[port]/api/(providers)/huggingface/route";function ep(){return(0,s.patchFetch)({serverHooks:el,staticGenerationAsyncStorage:ec})}},87320:(e,t,r)=>{r.d(t,{q:()=>a});var n=r(72223);let a=(e,t)=>(0,n.b9)(t??"gpt-4").encode(e).length??0}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[9276,1203,50,3306,6292,2223,464],()=>r(52));module.exports=n})();